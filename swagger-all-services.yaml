openapi: 3.0.0
info:
  title: LAB5 Microservices API
  version: 1.0.0
  description: Documentation simple des endpoints REST principaux de tous les services
servers:
  - url: http://localhost:8080
paths:
  /api/v1/products:
    get:
      summary: Récupère la liste de tous les produits
      responses:
        '200':
          description: Tableau de produits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Produit'
    post:
      summary: Ajoute un nouveau produit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produit'
      responses:
        '201':
          description: Produit créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produit'
  /api/v1/products/{id}:
    get:
      summary: Récupère un produit par son identifiant
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détail du produit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produit'
    delete:
      summary: Supprime un produit
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Confirmation de suppression
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/v1/stores/{id}/stock:
    get:
      summary: Récupère le stock d'un magasin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tableau de stocks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
  /api/v1/sales:
    get:
      summary: Liste toutes les ventes
      responses:
        '200':
          description: Tableau de ventes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
  /api/v1/reports/sales:
    get:
      summary: Génère un rapport de ventes consolidé
      responses:
        '200':
          description: Rapport de ventes (totaux, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleReport'
  /api/v1/dashboard:
    get:
      summary: Vue d'ensemble du dashboard (statistiques globales)
      responses:
        '200':
          description: Données agrégées (nombre de produits, ventes, stock total, etc.)
          content:
            application/json:
              schema:
                type: object
                properties:
                  nbProduits:
                    type: integer
                  nbVentes:
                    type: integer
                  stockTotal:
                    type: integer
  /api/v1/customers:
    get:
      summary: Liste tous les clients
      responses:
        '200':
          description: Tableau de clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Ajoute un nouveau client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Client créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/customers/{id}:
    get:
      summary: Récupère un client par son identifiant
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détail du client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/orders:
    get:
      summary: Liste toutes les commandes
      responses:
        '200':
          description: Tableau de commandes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Ajoute une nouvelle commande
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Commande créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/v1/orders/{id}:
    get:
      summary: Récupère une commande par son identifiant
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détail de la commande
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    Produit:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        categorie:
          type: string
        prix:
          type: number
          format: float
        quantite:
          type: integer
    Stock:
      type: object
      properties:
        produitId:
          type: integer
        quantite:
          type: integer
    Sale:
      type: object
      properties:
        id:
          type: integer
        produitId:
          type: integer
        quantite:
          type: integer
        date:
          type: string
          format: date
    SaleReport:
      type: object
      properties:
        totalVentes:
          type: integer
        totalMontant:
          type: number
          format: float
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
        customerId:
          type: integer
        produits:
          type: array
          items:
            $ref: '#/components/schemas/Produit'
        total:
          type: number
          format: float 